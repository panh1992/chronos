ext {
    junitVersion = '4.12'
    lombokVersion = '1.18.12'
    commonsVersion = '2.8.0'
    mysqlVersion = '8.0.20'
    elasticsearchVersion = '7.8.0'
}

buildscript {

    ext {
        springBootVersion = '2.3.1.RELEASE'
        springCloudVersion = 'Hoxton.SR6'
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

allprojects {

    group 'org.chronos'
    version '1.0-SNAPSHOT'

    apply plugin: 'checkstyle'

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        testImplementation group: 'junit', name: 'junit', version: "${junitVersion}"
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
        compile group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
        testCompile group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    }

    // 排除 bootJar 指定Main方法
    project(":core") {
        bootJar { enabled = false }
        jar { enabled = true }
    }

    project(":account") {
        bootJar { enabled = true }
        jar { enabled = false }
    }

    jar {
        manifest.attributes provider: 'gradle'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    checkstyle {
        toolVersion = '8.31'
        configFile rootProject.file('checkstyle/checkstyle.xml')
        sourceSets = [project.sourceSets.main]
        ignoreFailures = false
        showViolations = true
    }

}
